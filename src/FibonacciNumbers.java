/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

public class FibonacciNumbers {
    public static void main(String[] args) {
        int[] fibonacciNumbers = {1,2};
        int value = 0;
        int lastIndex;
        int fibonacciSum = 2;
        do {
            lastIndex = fibonacciNumbers.length - 1;
            value = fibonacciNumbers[lastIndex] + fibonacciNumbers[lastIndex-1];
            if (value < 4_000_000) {
                fibonacciNumbers = addNewElement(lastIndex, fibonacciNumbers, value);
                if (value % 2 == 0) {
                    fibonacciSum += value;
                }
            }
        }while (value < 4_000_000);
        System.out.println(fibonacciSum);
    }

    public static int[] addNewElement(int index, int[] arr, int value){
        int[] newArr = new int[index +2];
        for (int i = 0; i <= index; i++) {
            newArr[i] = arr[i];
        }
        newArr[index +1] = value;

        return newArr;
    }
}
